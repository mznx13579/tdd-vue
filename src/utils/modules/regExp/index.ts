const regExp = {
  //! 자주 사용되는 공통 정규 표현식 모음
  regExp: {
    email: /^[0-9a-z]([-_.]?[0-9a-z])*@[0-9a-z]([-_.]?[0-9a-zA-Z])*\.[a-zA-Z]{2,9}$/,
    phone: /^\d{1}[0-9-]+\d{1,}$/,
    domain: /^(http(s)?:\/\/)*[A-Za-z0-9.-]+\.[A-Za-z]{2,9}$/,
    ip: /^((((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))|(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}\*)|(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){2}\*)|(((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){1}\*))$/,
  },

  //! 정규표현식 관련 SyntaxError 오류 메시지가 콘솔창에 출력되는 것을 막기 위한 특수문자 이스케이프 처리 문자
  //* return 값은 특수문자 이스케이프가 처리된 새로운 정규표현식
  specialCharEscape(target: string, flag = 'g') {
    const regexEscape = (originalValue: string) => originalValue.replace(/[-/\\^$*+?.()|[\]{}]/g, '\\$&');
    return new RegExp(`${regexEscape(target)}`, flag);
  },
};

export { regExp };
